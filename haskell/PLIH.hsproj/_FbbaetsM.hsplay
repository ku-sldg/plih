-- Haskell Playground 1.0
runS (return 1) 1
runS ((put 2) >>= \x -> (return 3)) 1
runS ((return 6) >>= \x -> (put 2)) 1
x = do { (put 3) ;
          z <- get ;
          put (z+1) ;
          put (z+2) ;
          (return 3) }
runS x 1
z = do { put initMem ;
         gets (\s->(s 0))}
let (v,m) = runS z initMem in show (show v)
let (v,m) = runS (evalM [] (Num 3)) initSto in v==(NumV 3)